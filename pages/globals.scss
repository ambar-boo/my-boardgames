$colors : (
  "surface-bg-lightest": #fff,
  "surface-bg": #fefcf6,
  "on-surface-bg": #0f1f18,
  "primary": #496727,
  "primary-surface": #F5F4EB,
);

@function HexToRGB($hex) {
  @return red($hex), green($hex), blue($hex);
}

:root {
  --max-width: 1170px;
  --row-padding: 15px;

  @if $colors {
    @each $key, $value in $colors {
      --#{$key} : #{$value};
      --#{$key}_rgb : #{HexToRGB($value)};
    }
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    //--surface-bg: #eee;
    //--on-surface-bg: #000;
  }
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
  font-family: 'Open Sans', sans-serif;
}

body {
  color: var(--on-surface-bg);
  background: var(--surface-bg);
}

a {
  color: inherit;
  text-decoration: none;
}

button {
  border: none;
  box-shadow: none;
  outline: none;
  font-family: 'Open Sans', sans-serif;
  cursor: pointer;
}

.main-content {
  padding: 40px 0;
}

@media (prefers-color-scheme: dark) {
  html {
    color-scheme: dark;
  }
}

.swiper-button-disabled {
  cursor: auto!important;
  opacity: 0.5;
}

@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}
}

input {
  width: 100%;
  height: 34px;
  line-height: 32px;
  border: 1px solid rgba(var(--primary_rgb), 0.2);
  padding: 0 15px;
  outline: none;
  box-shadow: none;
  border-radius: 3px;
  font-family: 'Open Sans', sans-serif;
  font-weight: 400;
  font-size: 14px;
  background: var(--surface-bg-lightest);
  color: var(--on-surface-bg);
  -webkit-appearance: none;

  @include placeholder {
    font-family: 'Open Sans', sans-serif;
    font-weight: 400;
    font-size: 14px;
    color: rgba(var(--on-surface-bg_rgb), 0.6);
  }

  &:focus {
    box-shadow: 0 0 0 4px rgba(var(--primary_rgb), 0.1);
    border-color: rgba(var(--primary_rgb), 0.5);
  }
}
